package com.example.flightticketreservationsystem.domains;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import org.springframework.security.core.GrantedAuthority;
import java.util.Set;

@DynamoDBTable(tableName = "Role")
public class Role implements GrantedAuthority {

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    private String id;

    @DynamoDBAttribute
    private String name;

    @DynamoDBAttribute
    @DynamoDBTypeConverted(converter = UserSetConverter.class)
    private Set<String> userIds; // Stores user IDs instead of User objects

    // Getters and Setters
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Set<String> getUserIds() {
        return userIds;
    }

    public void setUserIds(Set<String> userIds) {
        this.userIds = userIds;
    }

    @Override
    public String getAuthority() {
        return name;
    }

    // Converter for User IDs Set
    static public class UserSetConverter implements DynamoDBTypeConverter<Set<String>, Set<String>> {
        @Override
        public Set<String> convert(Set<String> userIds) {
            return userIds; // Simple pass-through as we're just storing IDs
        }

        @Override
        public Set<String> unconvert(Set<String> userIds) {
            return userIds;
        }
    }
}